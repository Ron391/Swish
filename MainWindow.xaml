<Window x:Class="Swish.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Swish"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" AllowsTransparency="True" WindowStyle="None" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.BasedOn>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                    <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid HorizontalAlignment="Left" Height="38" VerticalAlignment="Top" Width="110">
                                    <Rectangle Fill="#FF7205A4" HorizontalAlignment="Left" Height="38" VerticalAlignment="Top" Width="110" RadiusY="20" RadiusX="20"/>
                                    <Image HorizontalAlignment="Left" Height="38" VerticalAlignment="Top" Width="40" Source="icons8-right-arrow-50.png" Margin="36,0,0,0"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Content" Value="{x:Null}"/>
                                    <Trigger Property="hc:IconElement.Geometry" Value="{x:Null}"/>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.BasedOn>
                        <Style TargetType="{x:Type ButtonBase}">
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                            <Setter Property="Padding" Value="10,6"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Control}">
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Rectangle RadiusY="4" RadiusX="4">
                                                                <Rectangle.Style>
                                                                    <Style TargetType="{x:Type Rectangle}">
                                                                        <Setter Property="Margin" Value="-2"/>
                                                                        <Setter Property="Opacity" Value="0.6"/>
                                                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                        <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                        <Setter Property="StrokeThickness" Value="2"/>
                                                                        <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                    </Style>
                                                                </Rectangle.Style>
                                                            </Rectangle>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Style.BasedOn>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.BasedOn>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource DarkDefaultBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.BasedOn>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                    <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid HorizontalAlignment="Left" Height="38" VerticalAlignment="Top" Width="110">
                                    <Rectangle Fill="#FF646464" HorizontalAlignment="Left" Height="38" VerticalAlignment="Top" Width="110" RadiusY="20" RadiusX="20"/>
                                    <Image HorizontalAlignment="Left" Height="38" VerticalAlignment="Top" Width="40" Source="icons8-right-arrow-50.png" Margin="36,0,0,0"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Content" Value="{x:Null}"/>
                                    <Trigger Property="hc:IconElement.Geometry" Value="{x:Null}"/>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.BasedOn>
                        <Style TargetType="{x:Type ButtonBase}">
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                            <Setter Property="Padding" Value="10,6"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Control}">
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Rectangle RadiusY="4" RadiusX="4">
                                                                <Rectangle.Style>
                                                                    <Style TargetType="{x:Type Rectangle}">
                                                                        <Setter Property="Margin" Value="-2"/>
                                                                        <Setter Property="Opacity" Value="0.6"/>
                                                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                        <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                        <Setter Property="StrokeThickness" Value="2"/>
                                                                        <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                    </Style>
                                                                </Rectangle.Style>
                                                            </Rectangle>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Style.BasedOn>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.BasedOn>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource DarkDefaultBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Storyboard x:Key="Storyboard1">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SignIn">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SignUp">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.75"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-135"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle1">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.25"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle1">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-135"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SignUpForm">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SignInForm">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Storyboard2">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SignIn">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SignUp">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle">
                <EasingDoubleKeyFrame KeyTime="0" Value="1.75"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0.222"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle">
                <EasingDoubleKeyFrame KeyTime="0" Value="-135"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="140"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="rectangle1">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.778"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle1">
                <EasingDoubleKeyFrame KeyTime="0" Value="-135"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="140"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SignUpForm">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SignInForm">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="UIElement.MouseDown" SourceName="rectangle">
            <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseDown" SourceName="rectangle1">
            <BeginStoryboard Storyboard="{StaticResource Storyboard2}"/>
        </EventTrigger>
    </Window.Triggers>
    <Grid>

        <Rectangle x:Name="rectangle" Fill="#FF252525" HorizontalAlignment="Left" Height="450" Margin="440,0,0,0" VerticalAlignment="Top" Width="360" RenderTransformOrigin="0.5,0.5">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>
        <Rectangle x:Name="rectangle1" Fill="#FFAB02F9" HorizontalAlignment="Left" Height="450" Margin="80,0,0,0" VerticalAlignment="Top" Width="360" RenderTransformOrigin="0.5,0.5">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>
        <Rectangle Fill="White" HorizontalAlignment="Left" Height="450" VerticalAlignment="Top" Width="80"/>
        <Image HorizontalAlignment="Left" Height="35" Margin="21,19,0,0" VerticalAlignment="Top" Width="35" Source="icons8-left-arrow-32.png"/>
        <Grid x:Name="SignIn" Margin="80,178,360,188">
            <Image HorizontalAlignment="Left" Height="50" Margin="154,0,0,0" VerticalAlignment="Top" Width="50" Source="icons8-user-50.png"/>
            <TextBlock HorizontalAlignment="Left" Height="29" Margin="0,55,0,0" TextWrapping="Wrap" Text="SIGN IN" VerticalAlignment="Top" Width="360" TextAlignment="Center" Foreground="White" FontSize="16"/>

        </Grid>
        <Grid x:Name="SignUp" Margin="440,178,0,188">
            <Image HorizontalAlignment="Left" Height="50" Margin="154,0,0,0" VerticalAlignment="Top" Width="50" Source="icons8-add-user-male-50.png"/>
            <TextBlock HorizontalAlignment="Left" Height="29" Margin="0,55,0,0" TextWrapping="Wrap" Text="SIGN UP" VerticalAlignment="Top" Width="360" TextAlignment="Center" Foreground="White" FontSize="16"/>

        </Grid>
        <Image x:Name="image" HorizontalAlignment="Left" Height="50" Margin="98,12,0,0" VerticalAlignment="Top" Width="50" Source="icons8-user-50.png" Visibility="Hidden"/>
        <Image x:Name="image1" HorizontalAlignment="Left" Height="50" Margin="734,14,0,0" VerticalAlignment="Top" Width="50" Source="icons8-add-user-male-50.png" Visibility="Hidden"/>
        <Grid x:Name="SignInForm" Margin="223,95,217,118" Visibility="Hidden">
            <TextBlock HorizontalAlignment="Left" Height="37" TextWrapping="Wrap" Text="SIGN IN" VerticalAlignment="Top" Width="360" Foreground="White" FontSize="24"/>
            <hc:TextBox hc:InfoElement.Placeholder="LOGIN" Margin="0,70,0,131" Background="{x:Null}" BorderBrush="{x:Null}" FontSize="16" Foreground="White"/>
            <Path Data="M80,173 L440,173" Fill="White" HorizontalAlignment="Left" Height="5" Margin="0,110,0,0" Stretch="Fill" VerticalAlignment="Top" Width="360" Stroke="White"/>
            <hc:PasswordBox ShowEyeButton="True" ShowClearButton="True" hc:InfoElement.Placeholder="PASSWORD" Margin="0,123,0,78" Background="{x:Null}" BorderBrush="{x:Null}" FontSize="16" Foreground="White"/>
            <Path Data="M80,173 L440,173" Fill="White" HorizontalAlignment="Left" Height="5" Margin="0,163,0,0" Stretch="Fill" VerticalAlignment="Top" Width="360" Stroke="White"/>
            <Button Content="Button" HorizontalAlignment="Left" Height="38" Margin="225,199,0,0" VerticalAlignment="Top" Width="110" Style="{DynamicResource ButtonStyle1}"/>
            <Image HorizontalAlignment="Left" Height="35" VerticalAlignment="Top" Width="35" Margin="0,194,0,0" Source="icons8-google-plus-50.png"/>
            <Image HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="30" Margin="42,197,0,0" Source="icons8-facebook-f-48.png"/>
            <Image HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="30" Margin="83,197,0,0" Source="icons8-twitter-60.png"/>

        </Grid>
        <Grid x:Name="SignUpForm" Margin="304,95,136,118" Visibility="Hidden">
            <TextBlock HorizontalAlignment="Left" Height="37" TextWrapping="Wrap" Text="SIGN UP" VerticalAlignment="Top" Width="360" Foreground="White" FontSize="24"/>
            <hc:TextBox hc:InfoElement.Placeholder="LOGIN" Margin="0,70,0,131" Background="{x:Null}" BorderBrush="{x:Null}" FontSize="16" Foreground="White"/>
            <Path Data="M80,173 L440,173" Fill="White" HorizontalAlignment="Left" Height="5" Margin="0,110,0,0" Stretch="Fill" VerticalAlignment="Top" Width="360" Stroke="White"/>
            <hc:PasswordBox ShowEyeButton="True" ShowClearButton="True" hc:InfoElement.Placeholder="PASSWORD" Margin="0,123,0,78" Background="{x:Null}" BorderBrush="{x:Null}" FontSize="16" Foreground="White"/>
            <Path Data="M80,173 L440,173" Fill="White" HorizontalAlignment="Left" Height="5" Margin="0,163,0,0" Stretch="Fill" VerticalAlignment="Top" Width="360" Stroke="White"/>
            <Button Content="Button" HorizontalAlignment="Left" Height="38" Margin="225,199,0,0" VerticalAlignment="Top" Width="110" Style="{DynamicResource ButtonStyle2}"/>
            <Image HorizontalAlignment="Left" Height="35" VerticalAlignment="Top" Width="35" Margin="0,194,0,0" Source="icons8-google-plus-50.png"/>
            <Image HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="30" Margin="42,197,0,0" Source="icons8-facebook-f-48.png"/>
            <Image HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="30" Margin="83,197,0,0" Source="icons8-twitter-60.png"/>

        </Grid>

    </Grid>
</Window>
